{"version":3,"sources":["components/SearchForm.js","components/Description.js","components/City.js","components/Temp.js","components/Max.js","components/Location.js","components/Other.js","App.js","registerServiceWorker.js","index.js"],"names":["SearchForm","react_default","a","createElement","className","onSubmit","this","props","handleZipcodeSubmit","type","value","zipcode","name","placeholder","onChange","handleZipcodeChange","Component","Description","weatherdata","main","City","Temp","Max","max","min","Location","lat","lon","Other","humidity","wind","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","apiData","temp","city","description","bind","assertThisInitialized","event","setState","target","_this2","preventDefault","url","concat","axios","then","res","prevState","console","log","data","temp_max","temp_min","coord","speed","weather","catch","err","components_SearchForm","components_City","components_Location","components_Temp","components_Description","components_Max","components_Other","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.07109114.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass SearchForm extends Component {\n  render() {\n    return (\n      <form\n        className=\"dataEntry\"\n        onSubmit={this.props.handleZipcodeSubmit}\n        >\n        <input className=\"forZip2\"\n            type=\"text\"\n            value={this.props.zipcode}\n            name=\"search\"\n            placeholder=\"Enter Zip Code\"\n            onChange={this.props.handleZipcodeChange} // add for NUMBER after this\n        /><br/>\n          <button className=\"forSubmit2\">Search Weather</button>\n      </form>\n    );\n  }\n}\n\nexport default SearchForm;\n","import React, { Component } from 'react';\n\nclass Description extends Component {\n\n  render() {\n    return (\n      <div>\n        <p className='weatherDesc'>Weather: {this.props.weatherdata}</p>\n        <p className='weatherDesc2'>{this.props.main}</p>\n      </div>\n      )\n  }\n\n}\n\nexport default Description;\n\n","import React, { Component } from 'react';\n\nclass City extends Component {\n\n  render() {\n    return (\n      <div>\n        <p className='city'>{this.props.weatherdata}</p>\n      </div>\n      )\n  }\n\n}\n\nexport default City;\n\n\n","import React, { Component } from 'react';\n\nclass Temp extends Component {\n\n  render() {\n    return (\n      <div>\n        <p className='showTemp'>{this.props.weatherdata}</p>\n      </div>\n      )\n  }\n\n}\n\nexport default Temp;\n\n","import React, { Component } from 'react';\n\nclass Max extends Component {\n\n  render () {\n    return (\n      <div className='temps'>\n        <p className='highTemp'> <span className='forSpan'>Max</span><br/> {this.props.max}</p>\n        <p className='highTemp'> <span className='forSpan'>Max</span> <br/> {this.props.min}</p>\n      </div>\n    )\n  }\n}\n\nexport default Max;\n\n","import React, { Component } from 'react';\n\nclass Location extends Component {\n\n  render() {\n    return (\n      <div className='location'>\n         <p>lat: {this.props.lat}</p>\n         <p>lon: {this.props.lon}</p>\n      </div>\n      )\n  }\n\n}\n\nexport default Location;\n","import React, { Component } from 'react';\n\nclass Other extends Component {\n\n  render() {\n    return (\n      <div className='other'>\n        <p>humidity: {this.props.humidity}</p>\n        <p>wind speed: {this.props.wind}</p>\n      </div>\n      )\n  }\n\n}\n\nexport default Other;\n","import React, { Component } from 'react';\nimport './reset.css'\nimport './App.css';\nimport axios from 'axios';\nimport SearchForm from './components/SearchForm';\nimport Description from './components/Description';\nimport City from './components/City';\nimport Temp from './components/Temp';\nimport Max from './components/Max';\nimport Location from './components/Location';\nimport Other from './components/Other';\n\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiData: [],\n      zipcode: '',\n      temp: '',\n      city: '',\n      lon: '',\n      lat:'',\n      max: '',\n      min: '',\n      humidity: '',\n      wind: '',\n      description: '',\n    }\n    this.handleZipcodeChange = this.handleZipcodeChange.bind(this);\n    this.handleZipcodeSubmit = this.handleZipcodeSubmit.bind(this);\n  }\n\nhandleZipcodeChange(event) {\n  this.setState({\n    zipcode: event.target.value\n  });\n}\n\nhandleZipcodeSubmit(event) {\n  event.preventDefault();\n  let url = `https://api.openweathermap.org/data/2.5/weather?zip=${this.state.zipcode}&units=imperial&appid=5af0320b9917cd01193d15669c155064`;\n\n  axios(url)\n  .then(res => {\n    this.setState((prevState) => {\n      console.log(res.data)\n      return { apiData: res.data,\n               temp: res.data.main.temp,\n               city: res.data.name,\n               max: res.data.main.temp_max,\n               min: res.data.main.temp_min,\n               lon: res.data.coord.lon,\n               lat: res.data.coord.lat,\n               humidity: res.data.main.humidity,\n               wind: res.data.wind.speed,\n               main: res.data.weather[0].main,\n               description: res.data.weather[0].description,\n      }\n    })\n  }).catch(err => console.log(err));\n}\n\n  render() {\n    return (\n      <div className='page'>\n      <div className=\"mainPage\">\n        <SearchForm\n              handleZipcodeChange={this.handleZipcodeChange}\n              zipcode={this.state.zipcode}\n              handleZipcodeSubmit={this.handleZipcodeSubmit} />\n        <City weatherdata={this.state.city}/>\n        <Location lon={this.state.lon} lat={this.state.lat}/>\n        <Temp weatherdata={this.state.temp}/>\n        <Description weatherdata={this.state.description} main={this.state.main}/>\n        <Max min={this.state.min} max={this.state.max}/>\n        <Other humidity={this.state.humidity} wind={this.state.wind}/>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}